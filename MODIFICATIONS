Modifications in improvements branch:
* More leverage of (static) type-safety.
* More specific exception catching. This might result in more Runtime Exceptions "leaking" through (intentionally).
* Extend size of MPI arrays to maximum Java supported capacity (OTR supports 32 bits lengths, otr4j currently supports up to Integer.MAX_VALUE-8 items.)
* Safely calling listeners such that faulty listener implementations do not interrupt protocol/message processing.
* Safely calling engine host such that faulty engine host implementation does not interrupt session state management:
 * This improvement is especially important as a significant number of calls depend on successful execution and assume that directly after a response can be constructed or state updated. Some cases are:
 * receiving of plain text message: plain text message is returned afterwards.
 * informing of errored/aborted SMP: state is reset afterwards.
 * NOTE that OtrException are technically allowed, but are not handled correctly either. The utility class that is now used, will catch, log and silence OtrException too.
* Fixed potential exceptions due to negative array sizes caused by interpretation of ints as signed in unserialization.
* Fixed issue with SM exponent and group element verification.
* Fix bad parsing of receiver instance id resulting in ids that are discarded as invalid even though they are actually valid values.
* Reduce unnecessary use of null.
* General simplification of code by removing redundant constructions.
* Updated obsolete collections.
* Better synchronization of containers in multi-threaded situations.
* Use of thread-unsafe classes in local context.
* Correct inconsistencies in javadoc/variable naming.
* Better/correct closing of stream resources.
* Smart use of try-finally to ensure correct closing.
* Removed OtrKeyManager* and related code. These are not used in the main otr4j implementation. Its function is already provided by OtrEngineHost.
* More use of logging and no more e.printStackTrace() calls that print to stderr.
* Extra argument checking for allowing listeners to be added to collection for later use.
